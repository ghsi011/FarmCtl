name: CI

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  unit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Spotless Check
        run: ./gradlew spotlessCheck --stacktrace

      - name: Detekt Check
        run: ./gradlew detekt --stacktrace

      - name: Run unit tests
        run: ./gradlew test --stacktrace

      - name: Upload JUnit test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: app/build/test-results/**/*.xml

  instrumented-tests:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [34] # Reverted to API 34 for stability
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Cache Gradle wrapper and dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/sdk/system-images/android-${{ matrix.api-level }}/google_apis/x86_64/*
          key: avd-${{ matrix.api-level }}-${{ runner.os }}-${{ hashFiles('**/build.gradle.kts', '**/gradle/libs.versions.toml') }}
          restore-keys: |
            avd-${{ matrix.api-level }}-${{ runner.os }}-

      - name: Run Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          avd-name: test_avd
          emulator-options: "no-boot-anim skip-adb-auth"
          script: ./gradlew connectedCheck --stacktrace

      - name: Upload Android test report
        if: always() # Uploads artifacts even if the job fails
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report-${{ matrix.api-level }}
          path: app/build/reports/androidTests/connected/